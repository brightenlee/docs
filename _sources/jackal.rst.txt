Jackal
======

Introduction
------------

.. figure:: _static/jackal/jackal.png
   :width: 100%
   :align: center
   :figclass: align-centered
   :alt: jackal

Jackal은 견고하고 가벼우며, 사용하기 쉬운 ROS 기반의 UGV입니다.
Jackal에는 IMU, GPS, PC가 포함되어 있습니다. 또한 URDF, 시뮬레이션, 데모 어플리케이션을 포함한
ROS 인터페이스를 제공하고 있습니다.

|

Technical Specifications
++++++++++++++++++++++++

.. figure:: _static/jackal/specifications.png
   :width: 100%
   :align: center
   :figclass: align-centered
   :alt: jackal

What's Included
++++++++++++++++

+------------------------------------+----------+
| Name                               | Quantity |
+====================================+==========+
| Jackal UGV                         | 1        |
+------------------------------------+----------+
| 270 watt-hour lithium battery pack | 1        |
+------------------------------------+----------+
| 110V/220V universal charger        | 1        |
+------------------------------------+----------+
| Sony Bluetooth controller          | 1        |
+------------------------------------+----------+
| Jackal User Manual                 | 1        |
+------------------------------------+----------+

|

Hardware Overview
++++++++++++++++++

로봇의 외부 구성 요소로는 직경 190mm 바퀴, HMI 패널, 마운팅 상판이 있습니다.
HMI 패널은 아래 그림과 같으며, 왼쪽부터 모터 버튼, 통신, WiFi, 배터리 인디게이터 및
전원 버튼이 있습니다.

.. figure:: _static/jackal/jackal_hmi.png
   :width: 70%
   :align: center
   :figclass: align-centered
   :alt: hmi

로봇의 내부에 접근하려면 로봇 전면 아래에 있는 래치를 이용하여 상판 덮개를 열어야 합니다.
Anderson Power Pole 커넥터는 로봇에 전원을 공급하기 위한 커넥터로, 로봇이 작동하려면 연결되어 
있어야 합니다. 흰색 Molex 커넥터는 배터리 충전을 위한 커넥터입니다. 로붓 후면에 있는 충전 단자를 
이용하거나, 배터리 충전기에 직접 연결하여 배터리를 충전할 수 있습니다.
두 커넥터 모두 로봇과 연결되어 있어야 합니다.

.. figure:: _static/jackal/jackal_battery_area.png
   :width: 90%
   :align: center
   :figclass: align-centered
   :alt: battery area

로봇의 트레이를 고정하고 있는 나사를 풀면 트레이를 내릴 수 있습니다. 
로봇의 PC, 사용자를 위한 전원 보드, 추가 하드웨어 장착을 위한 공간을 확인할 수 있습니다.
트레이의 구성 요소와 사용자 전원 보드에 대한 내용은 아래 그림을 참조하십시오.
사용자 전원 보드는 4핀 Molex 단자와 스크류 터미널 단자로 제공됩니다.

.. figure:: _static/jackal/jackal_tray.png
   :width: 90%
   :align: center
   :figclass: align-centered
   :alt: tray

.. figure:: _static/jackal/jackal_user_power.png
   :width: 90%
   :align: center
   :figclass: align-centered
   :alt: user power

|

System Architecture
+++++++++++++++++++

Jackal은 32bit MCU와 Ubuntu가 설치된 x86 PC를 기반으로 구성되어 있습니다. 
MCU는 IMU, GPS로부터 데이터를 수신하고, IO 제어, 전원 공급 모니터링, 모터 제어 기능을 수행합니다.
|

MCU와 PC는 USB 연결을 이용하여 통신합니다. 통신 프로토콜으로는 rosserial을 사용하고,
rosserial_server 노드는 jackal_base 노드에 포함되어 있습니다. 로봇이 제공하는 ROS API는 아래 표와 같습니다.

.. 
  +--------------------+-----------------------------+----------------------------------------------------------------------------------+
  | Topic              | Message Type                | Purpose                                                                          |
  +====================+=============================+==================================================================================+
  | /cmd_vel           | geometry_msgs/Twist         | 로봇 구동을 위한  입력 토픽                                                      |
  +--------------------+-----------------------------+----------------------------------------------------------------------------------+
  | /odometry/filtered | nav_msgs/Odometry           | robot_localization 노드로부터 퍼블리싱되는 토픽. 엔코더, IMU, GPS를 이용하여 추정|
  +--------------------+-----------------------------+----------------------------------------------------------------------------------+
  | /imu/data          | sensor_msgs/IMU             | imu_filter_madgwick 노드로부터 퍼블리싱되는 토픽. IMU 데이터를 이용하여 방향 추정|
  +--------------------+-----------------------------+----------------------------------------------------------------------------------+
  | /navsat/fix        | geometry_msgs/TwistStamped  | GPS로부터 수신 받은 위치 데이터                                                  |
  +--------------------+-----------------------------+----------------------------------------------------------------------------------+
  | /navsat/vel        | geometry_msgs/TwistStamped  | GPS로부터 수신 받은 속도 데이터                                                  |
  +--------------------+-----------------------------+----------------------------------------------------------------------------------+
  | /cmd_drive         | jackal_msgs/Drive           | 로봇 컨트롤러의 출력. MCU로 전달되는 명령 데이터                                 |
  +--------------------+-----------------------------+----------------------------------------------------------------------------------+
  | /feedback          | jackal_msgs/Feedback        | 엔코더, 모터의 피드백 데이터                                                     |
  +--------------------+-----------------------------+----------------------------------------------------------------------------------+
  | /status            | jackal_msgs/Status          | 로봇의 전반적인 상태 데이터. diagnostics 노드로 전달                             |
  +--------------------+-----------------------------+----------------------------------------------------------------------------------+

+--------------------+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Topic              | Message Type                | Purpose                                                                                                                                                                     |
+====================+=============================+=============================================================================================================================================================================+
| /cmd_vel           | geometry_msgs/Twist         | Input to Jackal’s kinematic controller. Publish here to make Jackal go.                                                                                                     |
+--------------------+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| /odometry/filtered | nav_msgs/Odometry           | Published by robot_localization , a filtered localization estimate based on wheel odometry (encoders), integrated IMU, and integrated GPS.                                  |
+--------------------+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| /imu/data          | sensor_msgs/IMU             | Published by imu_filter_madgwick , an orientation estimate based on Jackal’s internal gyroscope, accelerometer, and magnetometer.                                           |
+--------------------+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| /navsat/fix        | geometry_msgs/TwistStamped  | Position fix from Jackal’s built in GPS receiver.                                                                                                                           |
+--------------------+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| /navsat/vel        | geometry_msgs/TwistStamped  | Velocity over ground according to the integrated GPS receiver.                                                                                                              |
+--------------------+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| /cmd_drive         | jackal_msgs/Drive           | Output from Jackal’s kinematic controller, input to the motor controllers. Subscribe here for a lower-level look at what’s going on.                                        |
+--------------------+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| /feedback          | jackal_msgs/Feedback        | High-frequency inputs from Jackal’s encoders and motor current sensors.                                                                                                     |
+--------------------+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| /status            | jackal_msgs/Status          | Low-frequency status data for Jackal’s systems. This information is republished in human readable form on the diagnostics topic and is best consumed with the Robot Monitor |
+--------------------+-----------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

|

Getting Started
---------------

|